================================
üí° Workshop Angular 17 with .NET 8  üí°
================================

‚ö° DAY 1

1: Installing tool MacOS and Windows
2: What new in Angular 17
3: Angular CLI 17.3.x
-------------------------------------------------------
üöÄ1. ‡∏Å‡∏≤‡∏£‡πÄ‡∏ï‡∏£‡∏µ‡∏¢‡∏°‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏°‡∏∑‡∏≠‡πÅ‡∏•‡∏∞‡∏Ñ‡∏ß‡∏≤‡∏°‡∏û‡∏£‡πâ‡∏≠‡∏°
üíª .NET 8 SDK
---
dotnet --version

üíª Node JS 20.x and up
---
node -v
npm -v
ppx -v

üíª Angular 17 Cli
---
ng version

üíª PostgreSQL 15/16
---
psql --version

üíª Git
---
git version

üíª VSCode
---
code -v

üöÄ 1. ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÇ‡∏õ‡∏£‡πÄ‡∏à‡πá‡∏Å‡∏ï‡πå‡πÅ‡∏£‡∏Å‡∏î‡πâ‡∏ß‡∏¢ Angular CLI 17.3.x ‡πÅ‡∏ö‡∏ö Standalone Component
---
üíª  ng new [project_name]
üíª  ng new myApp

‡πÄ‡∏õ‡∏¥‡∏î‡πÄ‡∏Ç‡πâ‡∏≤ VSCode ‡πÅ‡∏ö‡∏ö‡πÄ‡∏ó‡πà‡πÜ
---
code myApp -r

‡∏´‡∏≤‡∏Å‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÇ‡∏õ‡∏£‡πÄ‡∏à‡πá‡∏Å‡∏ï‡πå‡πÅ‡∏ö‡∏ö NgModules Component
---
ng new myApp --no-standalone

</> ‡∏Å‡∏≤‡∏£‡∏£‡∏±‡∏ô‡πÇ‡∏õ‡∏£‡πÄ‡∏à‡πá‡∏Å‡∏ï‡πå
---
ng serve
‡∏´‡∏£‡∏∑‡∏≠
ng s
---
‡∏õ‡∏Å‡∏ï‡∏¥‡∏à‡∏∞‡∏£‡∏±‡∏ô‡∏≠‡∏¢‡∏π‡πà‡∏ó‡∏µ‡πà http://localhost:4200

‡∏´‡∏≤‡∏Å‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£ run ‡∏ó‡∏µ‡πà port ‡∏≠‡∏∑‡πà‡∏ô 
üíª ng serve  --port 4400

üöÄ 2. What new in Angular 17
---
- Support Typescript 5.2-4, No Missing Commas
- Build-In Control Flow
- View Transition API¬†
- Deferrable views
- Server Side Rendering and Hydration
- New lifecycle hooks
- Input value transforms & new input, output 
- New model with signal 2 way data binding 
- Upgrade ==> https://update.angular.io

-------------------------------------------------------
‚ö° DAY 2

4: Standalone Components & LifeCycle
5: Template Syntax
6: Data Binding & Directives
7: Services & Dependency Injection
8: Routing & Navigation
-------------------------------------------------------

Step 1: ‡πÇ‡∏Ñ‡∏£‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÇ‡∏õ‡∏£‡πÄ‡∏à‡πá‡∏Å‡∏ï‡πå‡∏Ç‡∏≠‡∏á Angular 17
‡πÅ‡∏ö‡∏ö Standalone Component
---
üíª ng new ng17app-demo

Step 2: ‡πÄ‡∏õ‡∏¥‡∏î‡πÄ‡∏Ç‡πâ‡∏≤ vscod
---
üíª code ng17app-demo

Step 3: ‡∏ó‡∏î‡∏•‡∏≠‡∏á‡∏£‡∏±‡∏ô‡∏î‡∏π‡∏´‡∏ô‡πà‡∏≠‡∏¢‡∏Ñ‡∏£‡∏±‡∏ö
---
ng s
‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡∏î‡∏π‡∏ó‡∏µ‡πà‡πÄ‡∏ß‡πá‡∏ö
http://localhost:4200

Step 4: ‡∏™‡∏£‡πâ‡∏≤‡∏á component ‡πÉ‡∏´‡∏°‡πà‡∏Å‡∏±‡∏ô‡πÄ‡∏ñ‡∏≠‡∏∞
---
ng g c home --skip-tests
ng g c about --skip-tests
ng g c contact --skip-tests
ng g c register --skip-tests
ng g c login --skip-tests
ng g c navbar --skip-tests
ng g c footer --skip-tests

Step 5: ‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á bootstrap 5.x ‡πÑ‡∏ß‡πâ‡∏ó‡∏≥‡∏™‡πà‡∏ß‡∏ô‡∏Ç‡∏≠‡∏á design ‡∏Å‡∏±‡∏ô‡∏ô‡∏∞
---
npm i bootstrap@5

Step 6: ‡∏ó‡∏≥‡∏Å‡∏≤‡∏£ Config ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô Bootstrap ‡∏ó‡∏µ‡πà‡πÑ‡∏ü‡∏•‡πå angular.json
---
            "styles": [
              "node_modules/bootstrap/dist/css/bootstrap.min.css",
              "src/styles.scss"
            ],
            "scripts": [
              "node_modules/bootstrap/dist/js/bootstrap.bundle.js"
            ]

Step 7: ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏•‡∏≠‡∏á‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô Bootstrap ‡∏î‡∏π‡∏´‡∏ô‡πà‡∏≠‡∏¢ ‡πÑ‡∏õ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡πÑ‡∏ü‡∏•‡πå navbar.component.html
---
<ul class="bg-success">
</ul>

Step 8: ‡∏£‡∏±‡∏ô‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏î‡∏π‡∏™‡∏¥
---
ng s

Step 9: ‡πÑ‡∏´‡∏ô‡∏•‡∏≠‡∏á‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á google font ‡∏•‡∏á‡πÑ‡∏õ‡∏ã‡∏¥ ‡πÑ‡∏õ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏ó‡∏µ‡πà‡πÑ‡∏ü‡∏•‡πå index.html
---
<link href="https://fonts.googleapis.com/css2?family=IBM+Plex+Sans+Thai:wght@100;200;300;400;500;600;700&display=swap" rel="stylesheet">

Step 10: ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÉ‡∏ä‡πâ font ‡∏ó‡∏µ‡πà‡πÑ‡∏ü‡∏•‡πå style.scss
---
body {
    padding: 0;
    margin: 0;
    font-family: "IBM Plex Sans Thai", sans-serif;
}

Step 11: ‡∏°‡∏≤‡∏™‡∏£‡πâ‡∏≤‡∏á layout ‡∏Ç‡∏≠‡∏á‡πÄ‡∏ß‡πá‡∏ö‡∏Å‡∏±‡∏ô‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÑ‡∏ß‡πâ‡∏£‡∏ß‡∏°‡∏£‡πà‡∏≤‡∏á ‡πÄ‡∏°‡∏ô‡∏π ‡πÅ‡∏•‡∏∞‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤
---
ng g c layouts/frontLayout

‡∏à‡∏≤‡∏Å‡∏ô‡∏±‡πâ‡∏ô‡∏ó‡∏≥‡∏Å‡∏≤‡∏£ ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÉ‡∏ä‡πâ layout ‡∏ó‡∏µ‡πà‡πÑ‡∏ü‡∏•‡πå front-layout.component.html
---
<app-navbar></app-navbar>
<router-outlet></router-outlet>
<app-footer></app-footer>

Step 12: ‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ô Routing ‡∏Å‡∏±‡∏ô‡∏î‡∏µ‡∏Å‡∏ß‡πà‡∏≤ ‡∏ó‡∏µ‡πà‡πÑ‡∏ü‡∏•‡πå app.routes.ts
---
import { Routes } from '@angular/router';
import { HomeComponent } from './home/home.component';
import { FrontLayoutComponent } from './layouts/front-layout/front-layout.component';

export const routes: Routes = [
    {
        path: '',
        component: FrontLayoutComponent,
        children: [
            {
                path: '',
                component: HomeComponent
            },
  }
];

Step 13: ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡πÑ‡∏ü‡∏•‡πå app.component.html
---
<router-outlet />

Step 14: ‡∏•‡∏≠‡∏á‡∏£‡∏±‡∏ô‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏î‡∏π
---
ng s

Step 15: ‡∏õ‡∏£‡∏±‡∏ö‡πÅ‡∏ï‡πà‡∏á navbar.component.html 
---
<header class="p-3 text-bg-dark">
    <div class="container">
      <div class="d-flex flex-wrap align-items-center justify-content-center justify-content-lg-start">
        <a href="/" class="d-flex align-items-center mb-2 mb-lg-0 text-white text-decoration-none">
          <svg class="bi me-2" width="40" height="32" role="img" aria-label="Bootstrap"><use xlink:href="#bootstrap"></use></svg>
        </a>

        <ul class="nav col-12 col-lg-auto me-lg-auto mb-2 justify-content-center mb-md-0">
          <li><a href="#" class="nav-link px-2 text-secondary">Home</a></li>
          <li><a href="#" class="nav-link px-2 text-white">Features</a></li>
          <li><a href="#" class="nav-link px-2 text-white">Pricing</a></li>
          <li><a href="#" class="nav-link px-2 text-white">FAQs</a></li>
          <li><a href="#" class="nav-link px-2 text-white">About</a></li>
        </ul>

        <form class="col-12 col-lg-auto mb-3 mb-lg-0 me-lg-3" role="search">
          <input type="search" class="form-control form-control-dark text-bg-dark" placeholder="Search..." aria-label="Search">
        </form>

        <div class="text-end">
          <button type="button" class="btn btn-outline-light me-2">Login</button>
          <button type="button" class="btn btn-warning">Sign-up</button>
        </div>
      </div>
    </div>
  </header>

Step 16: ‡∏Å‡∏≤‡∏£‡∏ó‡∏≥ Validation form login
---
login.component.html
---
<div class="container mt-5 mb-5">
    <main class="form-signin w-25 m-auto">
        <form [formGroup]="loginForm">
            <div class="text-center">
                <img class="mb-4" src="xxx" alt="" width="72" height="57">
            </div>
            
            <h1 class="h3 mb-3 fw-normal text-center">Login</h1>
        
            <div class="form-floating mb-2">
                <input 
                    formControlName="email"
                    name="email"
                    type="email" 
                    class="form-control" 
                    id="floatingInput">
                <label for="floatingInput">Email</label>
                @if(submitted && loginForm.controls['email'].errors){
                    @if(loginForm.controls['email'].errors['required']){
                        <div class="text-danger my-2">‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏õ‡πâ‡∏≠‡∏ô email</div>
                    }
                    @if(loginForm.controls['email'].errors['email']){
                        <div class="text-danger my-2">‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö email ‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á</div>
                    }
                }
            </div>

            <div class="form-floating">
                <input 
                    formControlName="password"
                    name="password"
                    type="password" 
                    class="form-control" 
                    id="floatingPassword">
                <label for="floatingPassword">Password</label>
                @if(submitted && loginForm.controls['password'].errors){
                    @if(loginForm.controls['password'].errors['required']){
                        <div class="text-danger my-2">‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏õ‡πâ‡∏≠‡∏ô password</div>
                    }
                    @if(loginForm.controls['password'].errors['minlength']){
                        <div class="text-danger my-2">‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô‡∏ï‡πâ‡∏≠‡∏á‡πÑ‡∏°‡πà‡∏ô‡πâ‡∏≠‡∏¢‡∏Å‡∏ß‡πà‡∏≤ 6 ‡∏ï‡∏±‡∏ß‡∏≠‡∏±‡∏Å‡∏©‡∏£</div>
                    }
                }
            </div>
        
            <div class="form-check text-start my-3">
                <input class="form-check-input" type="checkbox" value="remember-me" id="flexCheckDefault">
                <label class="form-check-label" for="flexCheckDefault">
                Remember me
                </label>
            </div>

            <button 
                class="btn btn-primary w-100 py-2" 
                type="submit"
                (click)="submitLogin()"
                >Sign in
            </button>

            <button 
                class="btn btn-warning w-100 py-2 mt-2" 
                type="submit"
                (click)="resetForm()"
                >Reset
            </button>
            
            <!-- {{ userLogin.email }}
            {{ userLogin.password }} -->

        </form>
    </main>
</div>

login.component.ts
---
import { Component } from '@angular/core'
import { 
  ReactiveFormsModule, 
  FormsModule,
  FormGroup,
  FormBuilder,
  Validators
} from '@angular/forms'

@Component({
  selector: 'app-login',
  standalone: true,
  imports: [ReactiveFormsModule, FormsModule],
  templateUrl: './login.component.html',
  styleUrl: './login.component.scss'
})
export class LoginComponent {

  // FormGroup
  loginForm!: FormGroup
  // ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ï‡∏±‡∏ß‡πÅ‡∏õ‡∏£‡πÑ‡∏ß‡πâ‡πÄ‡∏ä‡πá‡∏Ñ‡∏ß‡πà‡∏≤ submit form ‡∏´‡∏£‡∏∑‡∏≠‡∏¢‡∏±‡∏á
  submitted = false

  // ‡∏ï‡∏±‡∏ß‡πÅ‡∏õ‡∏£‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ú‡∏π‡∏Å‡∏Å‡∏±‡∏ö‡∏ü‡∏≠‡∏£‡πå‡∏°
  userLogin = {
    "email": "",
    "password": ""
  }

  // Constructor
  constructor(
    private formBuilder: FormBuilder
  ){
  }

  // ngOnInit
  ngOnInit(){
    this.loginForm = this.formBuilder.group({
      email: ['', [Validators.required, Validators.email]],
      password: ['', [Validators.required, Validators.minLength(6)]]
    })
  }

  submitLogin(){

    this.submitted = true

    // ‡∏ñ‡πâ‡∏≤‡∏ü‡∏≠‡∏£‡πå‡∏°‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á (Invalid)
    if(this.loginForm.invalid){
      return
    } else {
      this.userLogin.email = this.loginForm.value.email
      this.userLogin.password = this.loginForm.value.password

      if(this.userLogin.email == "admin@email.com" && this.userLogin.password == "123456"){
        alert("Login Success")
      } else {
        alert("Login Fail")
      }

    }
  }

  resetForm(){
    this.submitted = false
    this.loginForm.reset()
  }

}

-------------------------------------------------------
‚ö° DAY 3

Section 9: Forms & Validation
Section 10: HTTP Client & RxJS
Section 11: Angular Material
-------------------------------------------------------

Step 1:  ‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á library ‡∏Ç‡∏≠‡∏á bootstrap icon
---
npm i bootstrap-icons@1.11.3

Step 2: ‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á SweetAlert 2 ‡πÑ‡∏ß‡πâ‡∏ó‡∏≥ popup
---
npm i sweetalert2@11.11.1

Step 3: ‡∏õ‡∏£‡∏±‡∏ö‡πÅ‡∏ï‡πà‡∏á Navbar ‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°
---
<nav class="navbar navbar-expand-lg navbar-dark bg-dark fixed-top" aria-label="Eleventh navbar example">
  <div class="container">
    <a class="navbar-brand" routerLink="" data-bs-toggle="collapse" data-bs-target=".navbar-collapse.show">Foodie</a>

    <div class="d-block">
      <button class="btn btn-success d-lg-none" routerLink="/login" data-bs-toggle="collapse" data-bs-target=".navbar-collapse.show">‡∏•‡πá‡∏≠‡∏Å‡∏≠‡∏¥‡∏ô</button>
      <button class="btn btn-primary mx-2 d-lg-none" routerLink="/register" data-bs-toggle="collapse" data-bs-target=".navbar-collapse.show">‡∏•‡∏á‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô</button>
      <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarsExample09" aria-controls="navbarsExample09" aria-expanded="true" aria-label="Toggle navigation">
        <span class="navbar-toggler-icon"></span>
      </button>
    </div>

    <div class="navbar-collapse collapse" id="navbarsExample09" style="">
        
      <ul class="navbar-nav me-auto mb-2 mb-lg-0 text-center text-lg-start">
          <li class="nav-item">
            <a class="nav-link" routerLink="" data-bs-toggle="collapse" data-bs-target=".navbar-collapse.show">‡∏´‡∏ô‡πâ‡∏≤‡∏´‡∏•‡∏±‡∏Å</a>
          </li>
          <li class="nav-item">
            <a class="nav-link" routerLink="/about"  data-bs-toggle="collapse" data-bs-target=".navbar-collapse.show">‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Å‡∏±‡∏ö‡πÄ‡∏£‡∏≤</a>
          </li>
          <li class="nav-item">
            <a class="nav-link" routerLink="/contact"  data-bs-toggle="collapse" data-bs-target=".navbar-collapse.show">‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‡πÄ‡∏£‡∏≤</a>
          </li>
          <li class="nav-item dropdown">
            <a class="nav-link dropdown-toggle" href="#" data-bs-toggle="dropdown" aria-expanded="false">‡∏ú‡∏•‡∏á‡∏≤‡∏ô</a>
            <ul class="dropdown-menu">
              <li><a href="#abc" class="dropdown-item">‡∏û‡∏±‡∏í‡∏ô‡∏≤‡πÄ‡∏ß‡πá‡∏ö‡πÑ‡∏ã‡∏ï‡πå</a></li>
              <li><a href="#abc" class="dropdown-item">‡∏≠‡∏≠‡∏Å‡πÅ‡∏ö‡∏ö</a></li>
              <li><a href="#abc" class="dropdown-item">‡∏õ‡∏£‡∏∂‡∏Å‡∏©‡∏≤‡πÇ‡∏Ñ‡∏£‡∏á‡∏Å‡∏≤‡∏£</a></li>
            </ul>
          </li>
        </ul>
        <form role="search">
          <input class="form-control" type="search" placeholder="Search" aria-label="Search">
        </form>

      <div class="text-center text-sm-start my-3 my-sm-0 d-none d-lg-block">
        <button class="btn btn-success mx-2" routerLink="/login">‡∏•‡πá‡∏≠‡∏Å‡∏≠‡∏¥‡∏ô</button>
        <button class="btn btn-primary" routerLink="/register">‡∏•‡∏á‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô</button>
      </div>
    </div>

  </div>
</nav>

navbar.component.css
---
.nav-link {
    color: #fff;
    font-size: 1.2rem;
    font-weight: 400;
    margin: 0 0.5rem;
    padding: 0.5rem 1rem;
    border-radius: 5px;
    transition: all 0.3s ease;
}

@media (max-width: 768px) {

    li:first-child {
            margin-top: 20px;
    }

    .nav-link {
        border: 1px solid #f8f9fa;
        border-radius: 5px;
        padding: 0.8rem 1rem;
        margin: 0.2rem 0;
    }

}

Step: 4 ‡∏õ‡∏£‡∏±‡∏ö‡πÅ‡∏ï‡πà‡∏á footer.component.html
---
<footer class="bg-secondary text-white">
  <div class="container">
    <footer class="py-5">
      <div class="row">
        <div class="col-6 col-md-2 mb-3">
          <h1>Menus</h1>
          <ul class="nav flex-column">
            <li class="nav-item mb-2"><a href="#" class="nav-link p-0 text-body-secondary">Home</a></li>
            <li class="nav-item mb-2"><a href="#" class="nav-link p-0 text-body-secondary">Features</a></li>
            <li class="nav-item mb-2"><a href="#" class="nav-link p-0 text-body-secondary">Pricing</a></li>
            <li class="nav-item mb-2"><a href="#" class="nav-link p-0 text-body-secondary">FAQs</a></li>
            <li class="nav-item mb-2"><a href="#" class="nav-link p-0 text-body-secondary">About</a></li>
          </ul>
        </div>
  
        <div class="col-6 col-md-2 mb-3">
          <h1>Services</h1>
          <ul class="nav flex-column">
            <li class="nav-item mb-2"><a href="#" class="nav-link p-0 text-body-secondary">Home</a></li>
            <li class="nav-item mb-2"><a href="#" class="nav-link p-0 text-body-secondary">Features</a></li>
            <li class="nav-item mb-2"><a href="#" class="nav-link p-0 text-body-secondary">Pricing</a></li>
            <li class="nav-item mb-2"><a href="#" class="nav-link p-0 text-body-secondary">FAQs</a></li>
            <li class="nav-item mb-2"><a href="#" class="nav-link p-0 text-body-secondary">About</a></li>
          </ul>
        </div>
  
        <div class="col-md-5 offset-md-1 mb-3">
          <form>
            <h1>Subscribe to our newsletter</h1>
            <p>Monthly digest of what's new and exciting from us.</p>
            <div class="d-flex flex-column flex-sm-row w-100 gap-2">
              <label for="newsletter1" class="visually-hidden">Email address</label>
              <input id="newsletter1" type="text" class="form-control" placeholder="Email address">
              <button class="btn btn-primary" type="button">Subscribe</button>
            </div>
          </form>
        </div>
      </div>
  
      <div class="d-flex flex-column flex-sm-row justify-content-between py-4 my-4 border-top">
        <p>¬© 2024 Company, Inc. All rights reserved.</p>
        <ul class="list-unstyled d-flex">
          <li class="ms-3"><a class="link-body-emphasis" href="#twitter" aria-label="Social twitter">
            <i class="bi bi-twitter-x text-white"></i></a>
          </li>
          <li class="ms-3"><a class="link-body-emphasis" href="#ig" aria-label="Social instragram">
            <i class="bi bi-instagram text-white"></i></a>
          </li>
          <li class="ms-3"><a class="link-body-emphasis" href="#fb" aria-label="Social facebook">
            <i class="bi bi-facebook text-white"></i></a>
          </li>
        </ul>
      </div>
    </footer>
  </div>
</footer>

footer.component.scss
---
h1{
    font-size: 1.25rem;
}

.nav-link {
    color: #fff !important;
    font-size: 1.2rem;
}

Step 5: config angular.json ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÅ‡∏™‡∏î‡∏á‡∏£‡∏π‡∏õ icon ‡πÅ‡∏•‡∏∞ sweetalert
---

"styles": [
              "node_modules/bootstrap/dist/css/bootstrap.min.css",
              "node_modules/bootstrap-icons/font/bootstrap-icons.scss",
              "node_modules/sweetalert2/src/sweetalert2.scss",
              "src/styles.scss"
            ],

Step 6: ‡∏õ‡∏£‡∏±‡∏ö‡πÅ‡∏ï‡πà‡∏á front-layout.component.html
---
<app-navbar />
<div class="pt-5">
    <router-outlet />
</div>
<app-footer />


Step 7: ‡∏õ‡∏£‡∏±‡∏ö‡πÅ‡∏ï‡πà‡∏á‡∏´‡∏ô‡πâ‡∏≤ home.component.html
---
<div id="carouselExample" class="carousel slide">
  <div class="carousel-inner">
    <div class="carousel-item active">
      <img ngSrc="assets/images/slides/food1.webp" alt="slide1" class="d-block" width="1920" height="600" priority sizes="(min-width: 375px) 100vw, 50vw">
    </div>
    <div class="carousel-item">
      <img ngSrc="assets/images/slides/food2.webp" alt="slide2" class="d-block" width="1920" height="600" priority sizes="(min-width: 375px) 100vw, 50vw">
    </div>
    <div class="carousel-item">
      <img ngSrc="assets/images/slides/food3.webp" alt="slide3" class="d-block" width="1920" height="600" priority sizes="(min-width: 375px) 100vw, 50vw">
    </div>
  </div>
  <button class="carousel-control-prev" type="button" data-bs-target="#carouselExample" data-bs-slide="prev">
    <span class="carousel-control-prev-icon" aria-hidden="true"></span>
    <span class="visually-hidden">Previous</span>
  </button>
  <button class="carousel-control-next" type="button" data-bs-target="#carouselExample" data-bs-slide="next">
    <span class="carousel-control-next-icon" aria-hidden="true"></span>
    <span class="visually-hidden">Next</span>
  </button>
</div>

<div class="container">
<div class="row g-4 py-5 row-cols-1 row-cols-lg-3">
  <div class="feature col text-center">
    <div class="feature-icon">
      <i class="bi bi-droplet-half" style="font-size: 4rem; color: cornflowerblue;"></i>
    </div>
    <h2>Smart life</h2>
    <p>Paragraph of text beneath the heading to explain the heading. We'll add onto it with another sentence and probably just keep going until we run out of words.</p>
    <a href="#demo" class="icon-link">
      More info
      <i class="bi bi-chevron-right"></i>
    </a>
  </div>
  <div class="feature col text-center">
    <div class="feature-icon">
      <i class="bi bi-brilliance" style="font-size: 4rem; color: cornflowerblue;"></i>
    </div>
    <h2>Balancer</h2>
    <p>Paragraph of text beneath the heading to explain the heading. We'll add onto it with another sentence and probably just keep going until we run out of words.</p>
    <a href="#demo" class="icon-link">
      More info
      <i class="bi bi-chevron-right"></i>
    </a>
  </div>
  <div class="feature col text-center">
    <div class="feature-icon">
      <i class="bi bi-cake2-fill" style="font-size: 4rem; color: cornflowerblue;"></i>
    </div>
    <h2>Food tech</h2>
    <p>Paragraph of text beneath the heading to explain the heading. We'll add onto it with another sentence and probably just keep going until we run out of words.</p>
    <a href="#demo" class="icon-link">
      More info
      <i class="bi bi-chevron-right"></i>
    </a>
  </div>
</div>
</div>

---
home.componenet.ts
---
import { NgOptimizedImage } from '@angular/common';
import { Component } from '@angular/core';

@Component({
  selector: 'app-home',
  standalone: true,
  imports: [NgOptimizedImage],
  templateUrl: './home.component.html',
  styleUrl: './home.component.scss'
})
export class HomeComponent {

}

---
home.component.scss
---
@media (max-width: 1200px) {
    img {
        width: 100% !important;
        height: auto !important;
    }
}

@media (max-width: 768px) {
    img {
        height: 300px !important;
        object-fit: cover;
    }
}

Step 8: ‡∏õ‡∏£‡∏±‡∏ö‡πÅ‡∏ï‡πà‡∏á‡∏´‡∏ô‡πâ‡∏≤ login.component.html
---
<div class="container mt-5 mb-5">
    <main class="form-signin col-md-4 offset-md-4">
        <form [formGroup]="loginForm">
            
            <div class="text-center">
                <img class="mb-4" ngSrc="assets/images/aavelogo.webp" alt="" width="100" height="100" priority>
            </div>
        
            <div class="form-floating mb-2">
                <input 
                    formControlName="email"
                    name="email"
                    type="email" 
                    class="form-control" 
                    id="floatingInput">
                <label for="floatingInput">Email</label>
                @if(submitted && loginForm.controls['email'].errors){
                    @if(loginForm.controls['email'].errors['required']){
                        <div class="text-danger my-2">‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏õ‡πâ‡∏≠‡∏ô email</div>
                    }
                    @if(loginForm.controls['email'].errors['email']){
                        <div class="text-danger my-2">‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö email ‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á</div>
                    }
                }
            </div>

            <div class="form-floating">
                <input 
                    formControlName="password"
                    name="password"
                    type="password" 
                    class="form-control" 
                    id="floatingPassword">
                <label for="floatingPassword">Password</label>
                @if(submitted && loginForm.controls['password'].errors){
                    @if(loginForm.controls['password'].errors['required']){
                        <div class="text-danger my-2">‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏õ‡πâ‡∏≠‡∏ô password</div>
                    }
                    @if(loginForm.controls['password'].errors['minlength']){
                        <div class="text-danger my-2">‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô‡∏ï‡πâ‡∏≠‡∏á‡πÑ‡∏°‡πà‡∏ô‡πâ‡∏≠‡∏¢‡∏Å‡∏ß‡πà‡∏≤ 6 ‡∏ï‡∏±‡∏ß‡∏≠‡∏±‡∏Å‡∏©‡∏£</div>
                    }
                }
            </div>
        
            <div class="form-check text-start my-3">
                <input class="form-check-input" type="checkbox" value="remember-me" id="flexCheckDefault">
                <label class="form-check-label" for="flexCheckDefault">
                Remember me
                </label>
            </div>

            <button 
                class="btn btn-primary w-100 py-2" 
                type="submit"
                (click)="submitLogin()"
                >Sign in
            </button>

            <button 
                class="btn btn-warning w-100 py-2 mt-2" 
                type="submit"
                (click)="resetForm()"
                >Reset
            </button>
            
            <!-- {{ userLogin.email }}
            {{ userLogin.password }} -->

        </form>
    </main>
</div>

---
login.component.ts
---
import { NgOptimizedImage } from '@angular/common'

@Component({
  selector: 'app-login',
  standalone: true,
  imports: [..., NgOptimizedImage],
  templateUrl: './login.component.html',
  styleUrl: './login.component.scss'
})
